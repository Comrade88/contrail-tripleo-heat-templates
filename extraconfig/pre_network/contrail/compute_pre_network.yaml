heat_template_version: queens

# NOTE: You don't need to pass the parameter explicitly from the
# parent template, it can be specified via the parameter_defaults
# in the resource_registry instead, if you want to override the default
# and/or share values with other templates in the tree.
parameters:
  RoleParameters:
    type: json
    description: Role Specific parameters
    default: {}
  ServiceNames:
    type: comma_delimited_list
    default: []
  deployment_actions:
    default: ['CREATE']
    type: comma_delimited_list
    description: >
      List of stack actions that will trigger any deployments in this
      templates. The actions will be an empty list of the server is in the
      toplevel DeploymentServerBlacklist parameter's value.
  server:
    type: string
  ContrailRegistryInsecure:
    default: false
    description: Contrail Registry
    type: boolean
  ContrailRegistry:
    default: 'michaelhenkel'
    description: Contrail Registry
    type: string
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  DockerContrailVrouterKernelInitImageName:
    description: image
    type: string
    default: "contrail-vrouter-kernel-init"
  DockerContrailVrouterAgentContainerName:
    description: image
    type: string
    default: "contrail-vrouter-agent"

description: >
  This template installs the Contrail kernel module  packages in order
  to bring vhost0 interface up. Vhost0 interface must be up before
  os-net-config takes over.

conditions:
  deployment_actions_empty:
    equals:
      - {get_param: deployment_actions}
      - []

resources:
  ContrailVrouterModuleDeployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      name: ContrailVrouterModuleDeployment
      server:  {get_param: server}
      config: {get_resource: ContrailVrouterModuleConfig}
      input_values:
        contrail_registry_insecure: {get_param: ContrailRegistryInsecure}
        contrail_registry: {get_param: ContrailRegistry}
        contrail_imagetag: {get_param: ContrailImageTag}
        contrail_vrouter_init_image: {get_param: DockerContrailVrouterKernelInitImageName}
        contrail_vrouter_agent_container_name: {get_param: DockerContrailVrouterAgentContainerName}
      actions:
        if:
          - deployment_actions_empty
          - []
          - ['CREATE'] # Only do this on CREATE

  ContrailVrouterModuleConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: contrail_registry_insecure
      - name: contrail_registry
      - name: contrail_imagetag
      - name: contrail_vrouter_init_image
      - name: contrail_vrouter_agent_container_name
      config: |
        #!/bin/bash
        export LOGFILE=/tmp/contrail_trace_full.txt
        exec > >(tee -a $LOGFILE)
        exec 2>&1
        echo "=================== $(date) ==================="
        set -xv
        contrail_registry_insecure=$contrail_registry_insecure
        contrail_registry=$contrail_registry
        contrail_imagetag=$contrail_imagetag
        contrail_vrouter_init_image=$contrail_vrouter_init_image
        if [[ ${contrail_registry_insecure} == 'True' ]]; then
          found=0
          registries=`cat /etc/sysconfig/docker |grep INSECURE_REGISTRY |awk -F"--insecure-registry" '{$1="";print $0;}' |tr  "\"" " "`
          for reg in $registries; do if [[ ${reg} == ${contrail_registry} ]]; then found=1; fi; done
          if [[ ${found} -eq 0 ]]; then
            registry_string=`cat /etc/sysconfig/docker |grep INSECURE_REGISTRY |awk -F"INSECURE_REGISTRY=\"" '{print $2}'|tr "\"" " "`
            registry_string="${registry_string} --insecure-registry ${contrail_registry}"
            complete_string="INSECURE_REGISTRY=\"${registry_string}\""
            echo ${complete_string}
            if [[ `grep INSECURE_REGISTRY /etc/sysconfig/docker` ]]; then
              sed "s/^INSECURE_REGISTRY=.*/${complete_string}/" /etc/sysconfig/docker
            else
              echo ${complete_string} >> /etc/sysconfig/docker
            fi
            systemctl restart docker
          fi
        fi
        mkdir /var/crashes
        chmod -R 755 /var/crashes
        ulimit -c unlimited
        echo "kernel.core_pattern = /var/crashes/core.%e.%p.%h.%t" >> /etc/sysctl.conf
        sysctl -p
        systemctl start docker
        docker run \
            --rm \
            --privileged \
            -e "CONTRAIL_VROUTER_AGENT_CONTAINER_NAME=${contrail_vrouter_agent_container_name}" \
            --name $contrail_vrouter_init_image \
            -v /etc/sysconfig/network-scripts:/etc/sysconfig/network-scripts \
            -v /lib/modules:/lib/modules \
            -v /bin:/host/bin \
            ${contrail_registry}/${contrail_vrouter_init_image}:${contrail_imagetag}
