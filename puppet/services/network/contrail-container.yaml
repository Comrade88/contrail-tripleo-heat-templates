heat_template_version: 2016-10-14

description: >
  Parameters for Contrail Container based deployment.

parameters:
  ContrailAnalyticsDBMinDiskGB:
    description:  The min size for Contrail Analytics DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''
  ContrailAnalyticsDBPassword:
    description:  The password for Contrail Analytics DB.
                  Change the password for production.
    type: string
    default: 'c0ntrail123'
    hidden: true
  ContrailAnalyticsDBUser:
    description: The password for Contrail Analytics DB
    type: string
    default: 'contrail_analyticsdb_cassandra_user'
  ContrailConfigDBMinDiskGB:
    description:  The min size for Contrail Config DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''
  ContrailConfigDBPassword:
    description:  The password for Contrail Config DB.
                  Change the password for production.
    type: string
    default: 'c0ntrail123'
    hidden: true
  ContrailConfigDBUser:
    description: The password for Contrail Config DB
    type: string
    default: 'contrail_configdb_cassandra_user'
  ContrailContainerTag:
    description:  Container tag to identify containers to be used.
                  Default is to use build number from installed Contrail packages.
    type: string
    default: ''
  ContrailContainerUrl:
    description: Url for containers downloading, if not set then ContrailRepo will be used.
    type: string
    default: ''
  ContrailExternalCassandraServers:
    description:  List of external servers to be used instead of internally
                  deployed in contrail controller container. If provided the
                  services will not be deployed in contrail controller container.
    type: string
    default: ''
  ContrailExternalLB:
    description:  Flag to identify the whether the loadbalancer is internaly
                  hosted in the lb container or managed externally.
                  Based on which the listen port of the contrail-api will be decided.
    type: boolean
    default: false
  ContrailExternalRabbitmqServers:
    description:  List of external servers to be used instead of internally
                  deployed in contrail controller container. If provided the
                  services will not be deployed in contrail controller container.
    type: string
    default: ''
  ContrailExternalZookeeperServers:
    description:  List of external servers to be used instead of internally
                  deployed in contrail controller container. If provided the
                  services will not be deployed in contrail controller container.
    type: string
    default: ''
  ContrailSslEnabled:
    description:  Flag to identify is SSL should be used in internal Contrail
                  services communications (sandesh, introspect, xmpp, ..).
    type: boolean
    default: false

conditions:
  contrail_container_tag_unset: {equals : [{get_param: ContrailContainerTag}, '']}
  contrail_container_url_unset: {equals : [{get_param: ContrailContainerUrl}, []]}
  contrail_external_cassandra_servers_unset: {equals : [{get_param: ContrailExternalCassandraServers}, []]}
  contrail_external_rabbitmq_servers_unset: {equals : [{get_param: ContrailExternalRabbitmqServers}, []]}
  contrail_external_zookeeper_servers_unset: {equals : [{get_param: ContrailExternalZookeeperServers}, []]}
  contrail_configdb_min_disk_gb_unset: {equals : [{get_param: ContrailConfigDBMinDiskGB}, '']}
  contrail_analyticsdb_min_disk_gb_unset: {equals : [{get_param: ContrailAnalyticsDBMinDiskGB}, '']}

outputs:
  role_data:
    description: Shared data for Contrail container based deployment.
    value:
      service_name: contrail_container
      config_settings:
        map_merge:
        - contrail_analyticsdb_cassandra_password: {get_param: ContrailAnalyticsDBPassword}
          contrail_analyticsdb_cassandra_user: {get_param: ContrailAnalyticsDBUser}
          contrail_configdb_cassandra_password: {get_param: ContrailConfigDBPassword}
          contrail_configdb_cassandra_user: {get_param: ContrailConfigDBUser}
          contrail_ssl_enabled: {get_param: ContrailSslEnabled}
          contrail::external_lb: {get_param: ContrailExternalLB}
        - if:
          - contrail_container_tag_unset
          - {}
          - contrail::container::tag: {get_param: ContrailContainerTag}
        - if:
          - contrail_container_url_unset
          - {}
          - contrail::container::url: {get_param: ContrailContainerUrl}
        - if:
          - contrail_external_cassandra_servers_unset
          - {}
          - contrail::external_cassandra_servers: {get_param: ContrailExternalCassandraServers}
        - if:
          - contrail_external_rabbitmq_servers_unset
          - {}
          - contrail::external_rabbitmq_servers: {get_param: ContrailExternalRabbitmqServers}
        - if:
          - contrail_external_zookeeper_servers_unset
          - {}
          - contrail::external_zookeeper_servers: {get_param: ContrailExternalZookeeperServers}
        - if:
          - contrail_configdb_min_disk_gb_unset
          - {}
          - contrail_configdb_min_disk_gb: {get_param: ContrailConfigDBMinDiskGB}
        - if:
          - contrail_analyticsdb_min_disk_gb_unset
          - {}
          - contrail_analyticsdb_min_disk_gb: {get_param: ContrailAnalyticsDBMinDiskGB}
