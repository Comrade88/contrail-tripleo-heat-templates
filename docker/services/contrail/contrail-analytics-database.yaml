heat_template_version: queens

description: >
  Contrail containerized Config Databse service

parameters:
  DockerContrailCassandraImageName:
    description: image
    type: string
    default: "contrail-external-cassandra"
  DockerContrailKafkaImageName:
    description: image
    type: string
    default: "contrail-external-kafka"
  DockerContrailZookeeperImageName:
    description: image
    type: string
    default: "contrail-external-zookeeper"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:

  ContainersCommon:
    type: ../containers-common.yaml


  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Analytics Database service.
    value:
      service_name: contrail_analytics_database
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      docker_config:
        step_4:
          contrail_analytics_database:
            image: &contrail_analytics_database_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailCassandraImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/log/contrail:/var/log/contrail
            env_file:
              - /etc/contrail/common_analytics_database.env
          contrail_analytics_zookeeper:
            image: &contrail_analytics_zookeeper_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailZookeeperImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/log/contrail:/var/log/contrail
            env_file:
              - /etc/contrail/common_analytics_database.env
          contrail_analytics_kafka:
            image: &contrail_analytics_kafka_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailKafkaImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/log/contrail:/var/log/contrail
            env_file:
              - /etc/contrail/common_analytics_database.env
      host_prep_tasks:
        - name: create contrail directories
          file: 
            path: "{{ item }}"
            state: directory
            recurse: yes
          with_items:
            - /var/log/contrail
            - /etc/contrail
        - name: register /etc/contrail/common_analytics_database.env
          stat:
            path: /etc/contrail/common_analytics_database.env
          register: p
        - name: create /etc/contrail/common_analytics_database.env
          copy: 
            dest: /etc/contrail/common_analytics_database.env
            content: ""
          when: not p.stat.exists
        - name: get contrail config database node ips
          shell: hiera -c /etc/puppet/hiera.yaml contrail_analytics_database_node_ips
          register: contrail_analytics_database_node_ips_list
        - name: turn contrail analytics database ips into json
          set_fact:
            contrail_analytics_database_node_ips_json: "{{ contrail_analytics_database_node_ips_list.stdout | from_json }}"
        - name: turn json into comma separated string
          set_fact:
            contrail_analytics_database_node_ips_string: "{{ contrail_analytics_database_node_ips_json | join(',') }}" 
        - name: write contrail analytics db node ips to environment file
          lineinfile: dest=/etc/contrail/common_analytics_database.env regexp='.*CASSANDRA_SEEDS$' line="CASSANDRA_SEEDS={{ contrail_analytics_database_node_ips_string }}" state=present
        - name: write contrail analytics zk node ips to environment file
          lineinfile: dest=/etc/contrail/common_analytics_database.env regexp='.*ZOOKEEPER_NODES$' line="ZOOKEEPER_NODES={{ contrail_analytics_database_node_ips_string }}" state=present
        - name: write contrail config Kafka node ips to environment file
          lineinfile: dest=/etc/contrail/common_analytics_database.env regexp='.*KAFKA_NODES$' line="KAFKA_NODES={{ contrail_config_database_node_ips_string }}" state=present
        - name: write remaining contrail config env cars
          lineinfile: dest=/etc/contrail/common_analytics_database.env line="{{ item }}" state=present
          with_items:
            - CASSANDRA_START_RPC=true
            - CASSANDRA_CLUSTER_NAME=contrail_analytics
            - CASSANDRA_PORT=9160
            - CASSANDRA_CQL_PORT=9042
            - CASSANDRA_SSL_STORAGE_PORT=7011
            - CASSANDRA_STORAGE_PORT=7010
            - CASSANDRA_JMX_LOCAL_PORT=7200
            - ZOOKEEPER_PORTS=4888:5888
            - ZOOKEEPER_PORT=2182
      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]
